import { SignInButton, SignOutButton, auth, useUser } from "@clerk/nextjs";
import Head from "next/head";
import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  console.log(user);

  return (
    <div className="flex gap-3 w-full">
      <img
        className="h-10 rounded-full"
        src={user.profileImageUrl}
        alt="Profile Image"
      />
      <input
        className="bg-transparent grow outline-none"
        placeholder="Type some reactions"
      />
    </div>
  );
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div className="flex gap-3 p-4 border-b border-slate-400">
      <img
        className="h-8 rounded-full"
        src={author.profileImageUrl}
        alt="Post Author URL"
      />
      <div className="flex flex-col">
        <div>
          <span className="text-sm">{`@${author.username}`}</span>
          {" · "}
          <span className="text-sm">
            {dayjs(post.createdAt).format("YYYY-MM-DD · HH:MM")}
          </span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>No data found</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center">
        <div className="md:max-w-2xl w-full border-x border-slate-400 h-screen">
          <div className="border-b border-slate-400 p-4 flex">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {!!user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {data?.map(fullPost => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
